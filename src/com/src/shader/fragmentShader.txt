#version 400 core

in vec2 passTextureCoordinates;
in vec3 normalVectorFromVertex;
in vec3 vectorFromVertexToLightSource;

layout(location = 0) out vec4 out_Color;

uniform sampler2D textureSampler;
uniform vec3 lightColor;

void main(void) {
    vec3 versor1 = normalize(normalVectorFromVertex);
    vec3 versor2 = normalize(vectorFromVertexToLightSource);

    float dotProduct = dot(versor1, versor2);
    float lighting = max(dotProduct, 0.0);
    vec3 finalLight = lighting * lightColor;

    out_Color = vec4(finalLight, 1.0) * texture(textureSampler, passTextureCoordinates);
}