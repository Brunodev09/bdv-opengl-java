#version 400 core

layout(location = 0) in vec3 position;
in vec2 textureCoordinates;
in vec3 normal;

out vec2 passTextureCoordinates;
out vec3 normalVectorFromVertex;
out vec3 vectorFromVertexToLightSource;
out vec3 vectorFromVertexToCamera;

uniform mat4 transformation;
uniform mat4 projection;
uniform mat4 view;
uniform vec3 lightPosition;

void main(void) {
    vec4 mainPosition = transformation * vec4(position, 1.0);

    gl_Position = projection * view * mainPosition;
    passTextureCoordinates = textureCoordinates * 40.0;

    normalVectorFromVertex = (transformation * vec4(normal, 0.0)).xyz;
    vectorFromVertexToLightSource = lightPosition - mainPosition.xyz;

    vectorFromVertexToCamera = (inverse(view) * vec4(0.0, 0.0, 0.0, 1.0)).xyz - mainPosition.xyz;
}